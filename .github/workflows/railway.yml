name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  frontend-test:
    if: ${{ hashFiles('**/package.json') != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            if [ -f package-lock.json ]; then npm ci; else npm install; fi
          else
            echo "No root package.json found; skipping install"
          fi

      - name: Run frontend tests
        run: |
          if [ -f package.json ]; then
            npm test --silent --if-present
          else
            echo "No package.json found; skipping frontend tests"
          fi

  backend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
          if [ -f retriever/requirements.txt ]; then pip install -r retriever/requirements.txt; fi
          pip install pytest

      - name: Run backend tests
        run: |
          set +e
          pytest -q
          code=$?
          # Exit code 5 = no tests collected => treat as success
          if [ $code -eq 5 ]; then
            echo "No tests collected; treating as success"
            exit 0
          fi
          exit $code

  deploy-railway:
    needs: [frontend-test, backend-test]
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Railway
        uses: railwayapp/action@v0
        with:
          service: helen-api
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Deploy
        run: |
          echo "Triggering Railway deployment"
          railway up --service helen-api --ci
